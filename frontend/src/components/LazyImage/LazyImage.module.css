.lazyImageWrapper {
    position: relative;
    background-color: var(--Schemes-Surface-Variant, #f0f0f0);
    /* width, height, aspect-ratio will be set by JS logic as inline styles */
    overflow: hidden;
    display: block;
    min-height: 1px;
    /* Đảm bảo wrapper luôn có ít nhất 1px chiều cao để có thể được quan sát */
    min-width: 1px;
    /* Đảm bảo wrapper luôn có ít nhất 1px chiều rộng */
}


.placeholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--Schemes-Surface-Variant, #f0f0f0);
    overflow: hidden;
    transition: opacity 0.3s ease-in-out;
}

/* Hiệu ứng Shimmer */
.shimmer {
    width: 100%;
    height: 100%;
    background: linear-gradient(to right,
            var(--Schemes-Surface-Variant, #f0f0f0) 0%,
            var(--Schemes-Surface-Dim, #b2b2b2) 20%,
            var(--Schemes-Outline-Variant, #5b5b5b) 60%,
            var(--Schemes-Surface-Variant, #f0f0f0) 100%);
    background-size: 100vw 100%;
    animation: shimmer 1.5s infinite linear;
}

@keyframes shimmer {
    0% {
        background-position: -100vw 0;
    }

    100% {
        background-position: 100vw 0;
    }
}

.image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 1;
    transition: opacity 0.3s ease-in-out;
}

.hidden {
    opacity: 0;
}

.errorPlaceholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-size: 1.5rem;
    text-align: center;
    background-color: var(--Schemes-Surface-Dim, #f0f0f0);
    color: var(--Schemes-Error, red);
}

.errorPlaceholder p {
    font-size: 1rem;
    color: var(--Schemes-Error, red);
}